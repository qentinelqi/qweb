[MASTER]

# Add files or directories to the blacklist. They should be base names, not
# paths.
ignore=.git,libs,vendor,versioneer.py, _version.py, remake_pyconly_wheel.py

[MESSAGES CONTROL]

disable=fixme, # comment containing FIXME, XXX, or TODO
        invalid-name,
        locally-disabled, # disable= used
        missing-docstring,
        too-few-public-methods,
        too-many-arguments,
        too-many-instance-attributes,
        too-many-locals,
        wrong-import-order,
        line-break-before-binary-operator,
        C0328,
        W1514,
        consider-using-f-string

# A comma-separated list of package or module names from where C extensions may
# be loaded. Extensions are loading into the active Python interpreter and may
# run arbitrary code.
extension-pkg-whitelist=cv2

generated-members=cv2.*

[REPORTS]

# Set the output format. Available formats are text, parseable, colorized, msvs
# (visual studio) and html. You can also give a reporter class, eg
# mypackage.mymodule.MyReporterClass.
output-format=text

# Tells whether to display a full report or only the messages
reports=no

msg-template={abspath}:{line} - [{msg_id}:({symbol}), {obj}] {msg}


[FORMAT]

max-line-length=100
max-module-lines=1000

# Regexp for a line that is allowed to be longer than the limit.
ignore-long-lines=^(\s*(# )?<?https?://\S+>?|.*u'//.+)$

# List of optional constructs for which whitespace checking is disabled
no-space-check=trailing-comma,dict-separator

# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.
expected-line-ending-format=LF


[BASIC]

# Colon-delimited sets of names that determine each other's naming style when
# the name regexes allow several styles.
name-group=

# Regular expression matching correct function names
function-rgx=[a-z_][a-z0-9_]{2,40}$

# Regular expression matching correct variable names
variable-rgx=[A-Za-z_][A-Za-z0-9_]{0,30}$

# Regular expression matching correct constant names
const-rgx=(([A-Z_][A-Za-z0-9_]*)|(__.*__))$

# Regular expression matching correct attribute names
attr-rgx=[a-z_][a-z0-9_]{0,30}$

# Regular expression matching correct argument names
argument-rgx=[A-Za-z_][a-z0-9_]{0,30}$

# Regular expression matching correct class attribute names
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{0,30}|(__.*__))$

# Regular expression matching correct inline iteration names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Regular expression matching correct class names
class-rgx=[A-Z_][a-zA-Z0-9]+$

# Regular expression matching correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression matching correct method names
method-rgx=[a-z_][a-z0-9_]{1,40}$


[SIMILARITIES]

min-similarity-lines=8
ignore-imports=yes
